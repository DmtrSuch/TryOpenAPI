# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AddresPeoples(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, age: int=None, name: str=None, surname: str=None):  # noqa: E501
        """AddresPeoples - a model defined in Swagger

        :param age: The age of this AddresPeoples.  # noqa: E501
        :type age: int
        :param name: The name of this AddresPeoples.  # noqa: E501
        :type name: str
        :param surname: The surname of this AddresPeoples.  # noqa: E501
        :type surname: str
        """
        self.swagger_types = {
            'age': int,
            'name': str,
            'surname': str
        }

        self.attribute_map = {
            'age': 'age',
            'name': 'name',
            'surname': 'surname'
        }
        self._age = age
        self._name = name
        self._surname = surname

    @classmethod
    def from_dict(cls, dikt) -> 'AddresPeoples':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The addres_peoples of this AddresPeoples.  # noqa: E501
        :rtype: AddresPeoples
        """
        return util.deserialize_model(dikt, cls)

    @property
    def age(self) -> int:
        """Gets the age of this AddresPeoples.


        :return: The age of this AddresPeoples.
        :rtype: int
        """
        return self._age

    @age.setter
    def age(self, age: int):
        """Sets the age of this AddresPeoples.


        :param age: The age of this AddresPeoples.
        :type age: int
        """

        self._age = age

    @property
    def name(self) -> str:
        """Gets the name of this AddresPeoples.


        :return: The name of this AddresPeoples.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this AddresPeoples.


        :param name: The name of this AddresPeoples.
        :type name: str
        """

        self._name = name

    @property
    def surname(self) -> str:
        """Gets the surname of this AddresPeoples.


        :return: The surname of this AddresPeoples.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname: str):
        """Sets the surname of this AddresPeoples.


        :param surname: The surname of this AddresPeoples.
        :type surname: str
        """

        self._surname = surname
